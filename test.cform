{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Metadata": {},
  "Parameters": {
    "KeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "KeyPair for EC2 Instance"
    },
    "vpc": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "Choose the VPC to build this in."
    },
    "SubnetId": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "The ID of a public subnet in your VPC"
    }
  },
  "Mappings": {
    "Fn::Transform": {
      "Name": "AWS::Include",
      "Parameters": {
        "Location": "s3://auto-ami-pull/amis.json"
      }
    }
  },
  "Conditions": {},
  "Resources": {
    "webhostsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": [
            "-",
            [
              "prod",
              "sg",
              "vpn"
            ]
          ]
        },
        "GroupDescription": "security group for vpn",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "50.225.156.210/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "50.225.156.210/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "943",
            "ToPort": "943",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "1194",
            "ToPort": "1194",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "webhostsg"
          }
        ]
      }
    },
    "LinuxEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "LinuxEc2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": {
          "Ref": "KeyPair"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "Ubuntu18"
          ]
        },
        "InstanceType": "t2.micro",
        "Monitoring": "false",
        "SubnetId": {
          "Ref": "SubnetId"
        },
        "SecurityGroupIds": [
          {
            "Ref": "webhostsg"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -x",
                "\n",
                "sudo ufw allow openvpn",
                "\n",
                "sudo ufw disable",
                "\n",
                "sudo service ufw stop",
                "\n",
                "sudo service apparmor stop",
                "\n",
                "sudo apt-get install -y net-tools wget",
                "\n",
                "sudo wget https://swupdate.openvpn.org/as/openvpn-as-2.6.1-Ubuntu18.amd_64.deb",
                "\n",
                "sudo dpkg -i openvpn-as-2.6.1-Ubuntu18.amd_64.deb",
                "\n",
                "wget https://raw.githubusercontent.com/davidadixon/bash_profile/master/bash_profile",
                "\n",
                "mv /home/ubuntu/.profile /home/ubuntu/.profile_bkup -f",
                "\n",
                "mv bash_profile /home/ubuntu/.profile -f",
                "\n",
                "source /home/ubuntu/.profile",
                "\n",
                ". /home/ubuntu/.profile",
                "\n"
              ]
            ]
          }
        }
      },
      "DependsOn": "LinuxEip"
    },
    "LinuxIPAssoc": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "LinuxEip",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "LinuxEc2"
        }
      },
      "DependsOn": "LinuxEc2"
    },
    "WindowsEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "WindowsEc2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": {
          "Ref": "KeyPair"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "Windows2016"
          ]
        },
        "InstanceType": "t2.micro",
        "Monitoring": "false",
        "SubnetId": {
          "Ref": "SubnetId"
        },
        "SecurityGroupIds": [
          {
            "Ref": "webhostsg"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "\n"
              ]
            ]
          }
        }
      },
      "DependsOn": "WindowsEip"
    },
    "WindowsIPAssoc": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "WindowsEip",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "WindowsEc2"
        }
      },
      "DependsOn": "WindowsEc2"
    }
  },
  "Outputs": {}
}